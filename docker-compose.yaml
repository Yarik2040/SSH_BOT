version: '3.8'

services:
  bot:
    image: bot_image
    depends_on:
      - db
    networks:
      - pt_network
    build: bot/
    volumes:
      - logs:/var/log/postgresql     

  db:
    healthcheck:
      test: 'pg_isready -U postgres -d db_bot'
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    image: db_image
    volumes:
      - logs:/var/log/postgresql 
    command:
      - "postgres" 
      - "-c" 
      - 'listen_addresses=*' 
      - "-c" 
      - 'archive_mode=on' 
      - "-c" 
      - 'archive_command=cp %p /oracle/pg_data/archive/%f'
      - "-c" 
      - 'max_wal_senders=10'
      - "-c"
      - 'wal_level=replica'
      - "-c"
      - 'wal_log_hints=on'
      - "-c"
      - 'log_directory=/var/log/postgresql/'
      - "-c"
      - 'log_filename=postgres.log'
      - "-c"
      - 'logging_collector=on'
      - "-c"
      - 'log_replication_commands=on'
    networks:
      - pt_network
    build: 
      context: db/

  db_repl:
    healthcheck:
      test: 'pg_isready -U postgres -d db_bot'
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    ports:
      - 5433:5432
    image: db_repl_image
    depends_on:
      - db
    networks:
      - pt_network
    build: 
      context: db_repl/
      dockerfile: Dockerfile


networks:
  pt_network:
    ipam:
      config:
        - subnet: 192.40.4.0/24

volumes:
  logs: